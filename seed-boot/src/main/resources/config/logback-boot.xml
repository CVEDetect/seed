<?xml version="1.0" encoding="UTF-8" ?>  
<!-- 日志组件启动时，以60秒周期监控此文件变化，并打印logback内部日志信息以达到实时查看logback运行状态的目的 -->
<!-- <configuration scan="true" scanPeriod="60 seconds" debug="true"> -->
<configuration>
    <!--
    <if condition='isDefined("tomcat.port")'>
        <then>
            <property name="PROJECT_NAME" value="demo-boot-${tomcat.port}"/>
        </then>
        <else>
            <property name="PROJECT_NAME" value="demo-boot"/>
        </else>
    </if>
    注意：该功能需要Janino包的支持<dependency groupId="org.codehaus.janino" artifactId="janino" version="3.0.7"/>
    <if condition='property("os.name").toUpperCase().contains("WINDOWS")'>
        <then>
            <property name="PROJECT_PATH" value="/app/logs/seed-boot"/>
        </then>
        <else>
            <property name="PROJECT_PATH" value="${LOG_PATH:-${LOG_TEMP:-${java.io.tmpdir:-/tmp}}}"/>
        </else>
    </if>
    -->
    <!-- 项目名称及日志目录定义 -->
    <property name="PROJECT_NAME" value="seed-boot"/>

    <!-- ${LOG_PATH}取到的就是application.properties里面配置的logging.path -->
    <!-- 注意SpringBoot中的logging.path和logging.file必须配置一个 -->
    <!-- 否则日志会写到工程根目录下的LOG_PATH_IS_UNDEFINED目录下 -->
    <!-- 但要是换成yml文件，测试发现怎么配置都会生成LOG_PATH_IS_UNDEFINED目录 -->
    <property name="LOG_HOME" value="${LOG_PATH}"/>

    <!-- 日志输出格式 -->
    <property name="LOG_PATTERN" value="%d{yyyy-MM-dd HH:mm:ss.SSS}[%-5level][%t][%C{0}.%M]%m%n"/>

    <!-- 每个logger都关联到logger上下文,默认上下文名称为"default" -->
    <!-- 可以使用<contextName>设置成其他名字，用于区分不同应用程序的记录 -->
    <!-- 一旦设置，不能修改 -->
    <contextName>${PROJECT_NAME}</contextName>

    <!-- RollingFileAppender用于滚动记录文件，先将日志记录到指定文件，当符合某个条件时，将日志记录到其他文件 -->
    <appender name="APP_LOG" class="ch.qos.logback.core.rolling.RollingFileAppender">
        <file>${LOG_HOME}/${PROJECT_NAME}.log</file>
        <encoder>
            <pattern>${LOG_PATTERN}</pattern>
        </encoder>
        <!-- rollingPolicy用于设置当发生滚动时，决定RollingFileAppender的行为，涉及文件移动和重命名 -->
        <!-- TimeBasedRollingPolicy是最常用的滚动策略，它根据时间来制定滚动策略，既负责滚动也负责出发滚动 -->
        <rollingPolicy class="ch.qos.logback.core.rolling.TimeBasedRollingPolicy">
            <fileNamePattern>${LOG_HOME}/archive/${PROJECT_NAME}.log.%d{yyyyMMdd}</fileNamePattern>
        </rollingPolicy>
    </appender>

    <appender name="CONSOLE" class="ch.qos.logback.core.ConsoleAppender">
        <encoder>
            <pattern>${LOG_PATTERN}</pattern>
        </encoder>
        <filter class="com.jadyer.seed.controller.temp.websocket.LogFilter"/>
    </appender>

    <logger name="defaultLogger" level="DEBUG" additivity="true">
        <appender-ref ref="APP_LOG"/>
    </logger>

    <if condition='property("spring.profiles.active").contains("prod")'>
        <then>
            <root level="INFO">
                <appender-ref ref="CONSOLE"/>
            </root>
        </then>
        <else>
            <root level="DEBUG">
                <appender-ref ref="CONSOLE"/>
            </root>
        </else>
    </if>
</configuration>