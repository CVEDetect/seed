# 配置文件属性读取之扫描包、多属性、随机数（各参数间也可直接引用来使用，且随机数支持随机字符串和数字）
scan:
  base:
    packages: com.jadyer.seed
    secretName: 测试的密文的用户为：${encrypt.username}
    detailInfo: 本工程扫描的包名为：${scan.base.packages}
    addressList:
      - Haerbin
      - Chongqing
      - ${random.value}
user:
  height: ${random.int}
  weight: ${random.long}
  sex: ${random.int(10)}
  age: ${random.int[30,100]}


# org.springframework.boot.autoconfigure.web.ServerProperties.java
server:
  port: 80
  tomcat:
    uriEncoding: UTF-8
  servlet:
    contextPath: /boot


# 日志配置这俩属性足矣
logging:
  path: /app/seed/log/boot
  config: classpath:config/logback-boot.xml
  level:
    io.netty: info
    org.jboss: warn
    org.apache: warn
    org.apache.catalina.core: info
    org.quartz: info
    org.redisson: info
    org.hibernate: warn
    org.thymeleaf: warn
    com.alibaba.druid: warn
    org.springframework: warn
    org.hibernate.type.descriptor.sql.BasicBinder: trace
    org.springframework.boot.web.embedded.tomcat: info
    org.springframework.boot.actuate.endpoint.web.servlet: info


management:
#  server:
#    port: 80
#    servlet:
#      context-path: /boot
  security:
      enabled: false
  endpoint:
    health:
      show-details: ALWAYS
    shutdown:
      enabled: true
  endpoints:
    web:
#      base-path: /actuator
      exposure:
#        include: health,info,env,metrics
        include: '*'


# 此配置仅供http://127.0.0.1/info使用
info:
  myversion: 8.7.0
  myblogurl: https://jadyer.cn/


# 屬性加密文件
jasypt:
  #file: file:/app/config/seed.jadyer.com/config.properties
  file: classpath:config/config.properties


spring:
#  application:
#    name: SeedBoot
#  boot:
#    admin:
#      client:
#        # 指定Spring-Boot-Admin的服务端URL
#        url: http://127.0.0.1:8080
#        # 接入Spring-Boot-Admin的客户端URL（通常用于服务端和客户端不在同一个服务器的情况）
#        instance:
#          service-url: http://127.0.0.1
  pid:
    file: /data/seed-boot.pid
  # org.springframework.boot.autoconfigure.batch.BatchProperties.java
  batch:
    job:
      enabled: false  # SpringBatch加载时默认会执行所有Job，这里取消掉
  main:
    allow-bean-definition-overriding: true #SpringBatch-StepScope要用到
  # SpringWeb项目需要添加CharacterEncodingFilter：org.springframework.boot.autoconfigure.http.HttpProperties.java
  http:
    encoding:
      force: true
      charset: UTF-8
  # org.springframework.boot.autoconfigure.web.servlet.MultipartProperties.java（The field fileData exceeds its maximum permitted size of 1048576 bytes.）
  servlet:
    multipart:
      maxFileSize: 10MB
      maxRequestSize: 10MB
  datasource:
    # https://www.cnblogs.com/sonng/p/11294609.html
    url: jdbc:mysql://${db.address}/${db.name}?useUnicode=true&characterEncoding=UTF8&failOverReadOnly=false&zeroDateTimeBehavior=convertToNull&serverTimezone=Asia/Shanghai
    username: ${db.username}
    password: ${db.password}
    # com.alibaba.druid.pool.DruidDataSource.java（另经测试：应用正常运行中，数据库突然宕掉后过一段时间又恢复，druid会自动重连）
    druid:
      async-init: true                              # 默认false：如果initialSize数量较多，打开它会加快应用启动时间
      initial-size: 2                               # 默认为0：初始化的数量
      max-active: 1000                              # 默认为8：最大连接池数量
      max-wait: 6000                                # 默认为-1：获取连接时最大等待时间：https://github.com/alibaba/druid/wiki/Druid锁的公平模式问题
      validation-query: SELECT 1                   # 默认为null：用来检测连接是否有效的sql，要求是一个查询语句（若该值为null，则testOnBorrow、testOnReturn、testWhileIdle都不会起作用）
      validation-query-timeout: 60                # 默认为-1：单位为秒：检测连接是否有效的超时时间（底层调用jdbc Statement对象的setQueryTimeout(int seconds)方法）
      test-while-idle: true                        # 默认为true：申请连接时检测，若空闲时间大于timeBetweenEvictionRunsMillis，执行validationQuery检测连接是否有效（建议配置为true，不影响性能，并且保证安全性）
      test-on-borrow: false                        # 默认为false：申请连接时执行validationQuery检测连接是否有效，该配置会降低性能
      test-on-return: false                        # 默认为false：归还连接时执行validationQuery检测连接是否有效，该配置会降低性能
      min-evictable-idle-time-millis: 300000     # 默认为30分钟：配置一个连接在池中最小生存的时间
      max-evictable-idle-time-millis: 300000     # 默认为7小时：配置一个连接在池中最大生存的时间
      time-between-eviction-runs-millis: 60000   # 默认为60秒：配置间隔多久才进行一次检测，检测需要关闭的空闲连接
      pool-prepared-statements: true              # 默认值false：打开PSCache（即缓存preparedStatement：http://www.infoq.com/cn/news/2017/03/Analysis-errors-MySQL-JDBC）
      max-pool-prepared-statement-per-connection-size: 20  # 默认值10：并且指定每个连接上PSCache的大小
      filters: wall,mergeStat
      web-stat-filter:
        enabled: true
        profile-enable: true
        url-pattern: /*
        #exclusions: *.js,*.gif,*.jpg,*.png,*.css,*.ico,/druid/*
      stat-view-servlet:
        enabled: true
        url-pattern: /druid/*
        login-username: druid
        login-password: https://jadyer.cn/
  # org.springframework.boot.autoconfigure.task.TaskExecutionProperties.java
  task:
    execution:
      thread-name-prefix: BootTaskExecutor-
      pool:
        max-size: 50
        core-size: 2
        queue-capacity: 5
  # org.springframework.boot.autoconfigure.orm.jpa.JpaProperties.java
  jpa:
    showSql: true
    database: MYSQL
    generateDdl: false
    databasePlatform: org.hibernate.dialect.MySQL5InnoDBDialect
    properties:
      hibernate:
        format_sql: true
        id:
          new_generator_mappings: false
        session_factory:
          statement_inspector: com.jadyer.seed.comm.jpa.ConditionStatementInspector
  # org.springframework.boot.autoconfigure.quartz.QuartzProperties.java
  quartz:
    # spring-boot-starter-quartz默认使用的就是MEMORY
    job-store-type: MEMORY
    # org.quartz.quartz.properties
    properties:
      org:
        quartz:
          scheduler:
            instanceName: qssScheduler
          threadPool:
            threadCount: 11


redis:
  lockWatchdogTimeout: 50000
  connectionTimeout: 2000
  soTimeout: 5000
  maxRedirections: 5
  maxTotal: 16
  maxIdle: 8
  minIdle: 0
  password: 111111
  nodes:
    - 192.168.2.210:7000
    - 192.168.2.210:7001
    - 192.168.2.210:7002
    - 192.168.2.210:7003
    - 192.168.2.210:7004
    - 192.168.2.210:7005


qss:
  host: http://127.0.0.1:8008
  appHost: http://127.0.0.1/boot
  appname: seedboot
  name: SpringBatchDemo
  cron: 0 */2 * * * ?


# 允许匿名访问的资源列表
auth:
  unauthUrl: /index
  anonyList:
    - /
    - /js/**
    - /css/**
    - /img/**
    - /druid/**
    - /portal/**
    - /info
    - /actuator/info
    - /actuator/health
    - /login
    - /captcha
    - /favicon.ico
    - /prop


---
spring:
  profiles: local

---
spring:
  profiles: dev
server:
  port: 8088
jasypt:
  file: file:/app/config/boot.seed.dev/config.properties

---
spring:
  profiles: test
server:
  port: 8089
jasypt:
  file: file:/app/config/boot.seed.test/config.properties

---
spring:
  profiles: prod
server:
  port: 8090
jasypt:
  file: file:/app/config/boot.seed.prod/config.properties
redis:
  nodes:
    - seed.xuanyu.redis:7000
    - seed.xuanyu.redis:7001
    - seed.xuanyu.redis:7002
    - seed.xuanyu.redis:7003
    - seed.xuanyu.redis:7004
    - seed.xuanyu.redis:7005