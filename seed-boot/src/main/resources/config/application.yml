# 配置文件属性读取之扫描包、多属性、随机数（各参数间也可直接引用来使用，且随机数支持随机字符串和数字）
scan:
  base:
    packages: com.jadyer.seed
    secretName: 测试的密文的用户为：${encrypt.username}
    detailInfo: 本工程扫描的包名为：${scan.base.packages}
    addressList:
      - Haerbin
      - Chongqing
      - ${random.value}
user:
  height: ${random.int}
  weight: ${random.long}
  sex: ${random.int(10)}
  age: ${random.int[30,100]}


# org.springframework.boot.autoconfigure.web.ServerProperties.java
server:
  port: 80
  tomcat:
    uriEncoding: UTF-8
  servlet:
    contextPath: /boot


# 日志配置这俩属性足矣
logging:
  path: /home/seed/log/boot
  config: classpath:config/logback-boot.xml


management:
#  server:
#    port: 80
#    servlet:
#      context-path: /boot
  security:
      enabled: false
  endpoints:
    web:
#      base-path: /actuator
      exposure:
        include: "*"
        #include: health,info,env,metrics
    health:
      show-details: always
    shutdown:
      enabled: true


# 此配置仅供http://127.0.0.1/info使用
info:
  myversion: 8.7.0
  myblogurl: https://jadyer.cn/


# 屬性加密文件
jasypt:
  #file: file:/app/config/seed.jadyer.com/config.properties
  file: classpath:config/config.properties


spring:
#  application:
#    name: SeedBoot
#  boot:
#    admin:
#      client:
#        url: http://127.0.0.1:8080
  # org.springframework.boot.autoconfigure.batch.BatchProperties.java
  batch:
    job:
      enabled: false  # SpringBatch加载时默认会执行所有Job，这里取消掉
  # SpringWeb项目需要添加CharacterEncodingFilter：org.springframework.boot.autoconfigure.http.HttpEncodingProperties.java
  http:
    encoding:
      force: true
      charset: UTF-8
  # org.springframework.boot.autoconfigure.web.servlet.MultipartProperties.java
  # Caused by: org.apache.tomcat.util.http.fileupload.FileUploadBase$SizeLimitExceededException: the request was rejected because its size (39140170) exceeds the configured maximum (10485760)
  servlet:
    multipart:
      enabled: true
      maxFileSize: 10MB
      maxRequestSize: 10MB
  h2:
    # 啟用H2控制台並自定義訪問地址
    console:
      path: /myh2
      enabled: true
  datasource:
    #url: jdbc:h2:mem:jadyer;DB_CLOSE_DELAY=-1;DB_CLOSE_ON_EXIT=FALSE
    url: jdbc:mysql://${db.address}/${db.name}?useUnicode=true&characterEncoding=UTF8&failOverReadOnly=false&zeroDateTimeBehavior=convertToNull&serverTimezone=Asia/Shanghai
    username: ${db.username}
    password: ${db.password}
    # 更多属性：https://github.com/alibaba/druid/issues/1344
    # 另经测试：应用正常运行中，数据库突然宕掉后过一段时间又恢复，druid会自动重连
    druid:
      filters: wall,mergeStat
      initialSize: 5               # 配置初始化大小、最小、最大
      minIdle: 5                   # 配置初始化大小、最小、最大
      maxActive: 100              # 配置初始化大小、最小、最大
      maxWait: 60000              # 配置获取连接等待超时的时间
      validationQuery: SELECT 1  # 默认的testWhileIdle=true、testOnBorrow=false、testOnReturn=false
      minEvictableIdleTimeMillis: 300000     # 配置一个连接在池中最小生存的时间，单位是毫秒
      timeBetweenEvictionRunsMillis: 60000  # 配置间隔多久才进行一次检测，检测需要关闭的空闲连接，单位是毫秒
      poolPreparedStatements: true                     # 打开PSCache(preparedStatement)，并且指定每个连接上PSCache的大小
      maxPoolPreparedStatementPerConnectionSize: 20  # http://www.infoq.com/cn/news/2017/03/Analysis-errors-MySQL-JDBC
      WebStatFilter:
        enabled: true
        profileEnable: true
        urlPattern: /*
        #exclusions: *.js,*.gif,*.jpg,*.png,*.css,*.ico,/druid/*
      StatViewServlet:
        enabled: true
        urlPattern: /druid/*
        loginUsername: druid
        loginPassword: https://jadyer.cn/
  # org.springframework.boot.autoconfigure.orm.jpa.JpaProperties.java
  jpa:
    showSql: true
    database: MYSQL
    generateDdl: false
    databasePlatform: org.hibernate.dialect.MySQL5InnoDBDialect
    properties:
      hibernate:
        format_sql: true
        id:
          new_generator_mappings: false
  # org.springframework.boot.autoconfigure.quartz.QuartzProperties.java
  quartz:
    job-store-type: MEMORY
    # org.quartz.quartz.properties
    properties:
      org:
        quartz:
          scheduler:
            instanceName: qssScheduler
          threadPool:
            threadCount: 11


redis:
  connectionTimeout: 2000
  soTimeout: 5000
  maxRedirections: 5
  maxTotal: 16
  maxIdle: 8
  minIdle: 0
  nodes:
    - 192.168.2.210:7000
    - 192.168.2.210:7001
    - 192.168.2.210:7002
    - 192.168.2.210:7003
    - 192.168.2.210:7004
    - 192.168.2.210:7005


redisson:
  lockWatchdogTimeout: 10000
  connectionMinimumIdleSize: 16
  connectionPoolSize: 32
  connectTimeout: 3000
  password: 111111
  nodes:
      - redis://192.168.20.53:6389


qss:
  host: http://127.0.0.1:8008
  appHost: http://127.0.0.1/boot
  appname: seedboot
  name: SpringBatchDemo
  cron: 0 */2 * * * ?


# 允许匿名访问的资源列表
auth:
  unauthUrl: /index
  anonyList:
    - /
    - /js/**
    - /css/**
    - /img/**
    - /druid/**
    - /portal/**
    - /info
    - /actuator/info
    - /actuator/health
    - /login
    - /captcha
    - /favicon.ico
    - /prop


---
spring:
  profiles: local

---
spring:
  profiles: dev
server:
  port: 8088
jasypt:
  file: file:/app/config/boot.seed.dev/config.properties

---
spring:
  profiles: test
server:
  port: 8089
jasypt:
  file: file:/app/config/boot.seed.test/config.properties

---
spring:
  profiles: prod
server:
  port: 8090
jasypt:
  file: file:/app/config/boot.seed.prod/config.properties
redis:
  nodes:
    - seed.xuanyu.redis:7000
    - seed.xuanyu.redis:7001
    - seed.xuanyu.redis:7002
    - seed.xuanyu.redis:7003
    - seed.xuanyu.redis:7004
    - seed.xuanyu.redis:7005