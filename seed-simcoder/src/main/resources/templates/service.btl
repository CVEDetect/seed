package ${PACKAGE_SERVICE};

import ${PACKAGE_MODEL}.${CLASS_NAME};
import ${PACKAGE_REPOSITORY}.${CLASS_NAME}Repository;
import com.jadyer.seed.comm.jpa.Condition;
import org.apache.commons.lang3.StringUtils;
import org.springframework.data.domain.Page;
import org.springframework.data.domain.PageRequest;
import org.springframework.data.domain.Pageable;
import org.springframework.data.domain.Sort;
import org.springframework.stereotype.Service;
import org.springframework.transaction.annotation.Propagation;
import org.springframework.transaction.annotation.Transactional;

import javax.annotation.Resource;

/**
 * ${comments}
 */
@Service
public class ${CLASS_NAME}Service {
    @Resource
    private ${CLASS_NAME}Repository ${CLASS_NAME_uncapitalize}Repository;

    @Transactional(rollbackFor=Exception.class)
    public ${CLASS_NAME} upsert(${CLASS_NAME} ${CLASS_NAME_uncapitalize}){
        return ${CLASS_NAME_uncapitalize}Repository.saveAndFlush(${CLASS_NAME_uncapitalize});
    }


    @Transactional(rollbackFor=Exception.class)
    public void delete(long id){
        ${CLASS_NAME_uncapitalize}Repository.delete(id);
    }


    public ${CLASS_NAME} get(long id){
        return ${CLASS_NAME_uncapitalize}Repository.findOne(id);
    }


    /**
     * @param pageNo 此值传null或空字符串，则默认查询所有（分页查询时，第一页则此值传"0"）
     * @param ${CLASS_NAME_uncapitalize} 此值传null或空对象，则默认查询所有
     */
    public Page<${CLASS_NAME}> list(String pageNo, ${CLASS_NAME} ${CLASS_NAME_uncapitalize}){
        //按条件查询
        Condition<${CLASS_NAME}> spec = Condition.and();
        if(null != ${CLASS_NAME_uncapitalize}){
        <%
        for(entry in fieldnameMap){
        var fielename_getter = CLASS_NAME_uncapitalize + ".get" + @org.apache.commons.lang3.StringUtils.capitalize(entry.key) + "()";
        if(entry.value=="Integer" || entry.value=="Long"){
        %>
            if(null != ${fielename_getter}){
                spec.eq("${entry.key}", ${fielename_getter});
            }
        <%}%>
        <%if(entry.value == "String"){%>
            if(StringUtils.isNotBlank(${fielename_getter})){
                spec.eq("${entry.key}", ${fielename_getter});
            }
        <%}%>
        <%}%>
        }
        //计算查询范围
        int pageSize = 10;
        if(StringUtils.isBlank(pageNo)){
            pageNo = "0";
            pageSize = 999;
        }
        //查询数据
        Sort sort = new Sort(Sort.Direction.DESC, "id");
        Pageable pageable = new PageRequest(Integer.parseInt(pageNo), pageSize, sort);
        return ${CLASS_NAME_uncapitalize}Repository.findAll(spec, pageable);
    }
}