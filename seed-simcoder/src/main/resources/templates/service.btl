package ${PACKAGE_SERVICE};

import ${PACKAGE_MODEL}.${CLASS_NAME};
import ${PACKAGE_REPOSITORY}.${CLASS_NAME}Repository;
import com.jadyer.seed.comm.jpa.Condition;
import org.apache.commons.lang3.StringUtils;
import org.springframework.data.domain.Page;
import org.springframework.data.domain.PageRequest;
import org.springframework.data.domain.Pageable;
import org.springframework.data.domain.Sort;
import org.springframework.stereotype.Service;
import org.springframework.transaction.annotation.Propagation;
import org.springframework.transaction.annotation.Transactional;

import javax.annotation.Resource;

/**
 * ${tablecomment}
 * Generated from seed-simcoder by 玄玉<http://jadyer.cn/> on ${date(), "yyyy/MM/dd HH:mm"}.
 */
@Service
public class ${CLASS_NAME}Service {
    @Resource
    private ${CLASS_NAME}Repository ${CLASS_NAME_uncapitalize}Repository;

    @Transactional(rollbackFor=Exception.class)
    public ${CLASS_NAME} upsert(${CLASS_NAME} ${CLASS_NAME_uncapitalize}){
        return ${CLASS_NAME_uncapitalize}Repository.saveAndFlush(${CLASS_NAME_uncapitalize});
    }


    @Transactional(rollbackFor=Exception.class)
    public void delete(long id){
        ${CLASS_NAME_uncapitalize}Repository.delete(id);
    }


    public ${CLASS_NAME} get(long id){
        return ${CLASS_NAME_uncapitalize}Repository.findOne(id);
    }


    /**
     * @param pageNo 页码从“1”开始，传“0”表示不分页
     * @param ${CLASS_NAME_uncapitalize} null或空对象表示查询所有
     */
    public Page<${CLASS_NAME}> list(int pageNo, ${CLASS_NAME} ${CLASS_NAME_uncapitalize}){
        //按条件查询
        Condition<${CLASS_NAME}> spec = Condition.and();
        if(null != ${CLASS_NAME_uncapitalize}){
        <%
        for(entry in fieldnameMap){
        var fielename_getter = CLASS_NAME_uncapitalize + ".get" + @org.apache.commons.lang3.StringUtils.capitalize(entry.key) + "()";
        if(entry.value=="Integer" || entry.value=="Long"){
        %>
            if(null != ${fielename_getter}){
                spec.eq("${entry.key}", ${fielename_getter});
            }
        <%}%>
        <%if(entry.value == "String"){%>
            if(StringUtils.isNotBlank(${fielename_getter})){
                spec.eq("${entry.key}", ${fielename_getter});
            }
        <%}%>
        <%}%>
        }
        //查询数据
        Sort sort = new Sort(Sort.Direction.DESC, "id");
        Pageable pageable = new PageRequest(pageNo>0 ? pageNo-1 : 0, pageNo>0 ? 10 : 999, sort);
        return ${CLASS_NAME_uncapitalize}Repository.findAll(spec, pageable);
    }
}