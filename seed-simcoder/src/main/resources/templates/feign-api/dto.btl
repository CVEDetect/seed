package ${PACKAGE_DTO};

import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;

<%if(hasNotBlankAnnotation){%>
import javax.validation.constraints.NotBlank;
<%}%>
<%if(hasNotNullAnnotation){%>
import javax.validation.constraints.NotNull;
<%}%>
<%if(hasNotBlankSizeAnnotation){%>
import javax.validation.constraints.Size;
<%}%>
import java.io.Serializable;
<%if(hasBigDecimal){%>
import java.math.BigDecimal;
<%}%>
<%if(hasDate){%>
import java.util.Date;
<%}%>

/**
 * Generated from seed-simcoder by 玄玉<https://jadyer.cn/> on ${date(), "yyyy/MM/dd HH:mm"}.
 */
@ApiModel("${tablecomment}")
public class ${CLASS_NAME}DTO implements Serializable {
    private static final long serialVersionUID = ${@com.jadyer.seed.simcoder.helper.CoderHelper.buildSerialVersionUID()}L;
    private Long id;
    private Date createTime;
    private Date updateTime;
${fields_dto}
    public Long getId() {
        return id;
    }

    public void setId(Long id) {
        this.id = id;
    }

    public Date getCreateTime() {
        return createTime;
    }

    public void setCreateTime(Date createTime) {
        this.createTime = createTime;
    }

    public Date getUpdateTime() {
        return updateTime;
    }

    public void setUpdateTime(Date updateTime) {
        this.updateTime = updateTime;
    }

${methods}

    @Override
    public String toString() {
        return "${CLASS_NAME}DTO{" +
                "id=" + id +
                ", createTime=" + createTime +
                ", updateTime=" + updateTime +
                ", " +
                ${fields_toString}
                '}';
    }
<%if(IS_GENERATE_BUILDER){%>

    /**
     * Builder模式
     */
    private ${CLASS_NAME}DTO(Builder builder) {
${fields_BuilderSetValues}
    }
    public static Builder builder() {
        return new Builder();
    }
    public static final class Builder {
${fields_BuilderNoAnnotations}
        private Builder(){}
        public ${CLASS_NAME}DTO build() {
            // if(this.id < 0){
            //     throw new IllegalArgumentException("ID不能为负数");
            // }
            return new ${CLASS_NAME}DTO(this);
        }
${methods_Builders}
    }
<%}%>
}