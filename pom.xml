<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
    xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd">
    <modelVersion>4.0.0</modelVersion>
    <groupId>com.jadyer.seed</groupId>
    <artifactId>seed</artifactId>
    <version>2.1</version>
    <packaging>pom</packaging>
    <modules>
        <module>seed-admin</module>
        <module>seed-boot</module>
        <module>seed-comm</module>
        <module>seed-mpp</module>
        <module>seed-open</module>
        <module>seed-qss</module>
        <module>seed-server</module>
        <module>seed-simcoder</module>
        <module>seed-simulator</module>
    </modules>

    <properties>
        <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
        <commons-io.version>2.6</commons-io.version>
        <commons-net.version>3.6</commons-net.version>
        <commons-text.version>1.6</commons-text.version>
        <commons-lang3.version>3.8.1</commons-lang3.version>
        <commons-codec.version>1.12</commons-codec.version>
        <commons-fileupload.version>1.4</commons-fileupload.version>
        <apache.poi.version>3.16</apache.poi.version>
        <apache.mina.version>2.0.19</apache.mina.version>
        <apache.httpclient.version>4.5.3</apache.httpclient.version>
        <google.zxing.version>2.2</google.zxing.version>
        <alibaba.oss.version>3.4.2</alibaba.oss.version>
        <alibaba.druid.version>1.1.16</alibaba.druid.version>
        <alibaba.fastjson.version>1.2.56</alibaba.fastjson.version>
        <beetl.version>2.9.9</beetl.version>
        <jsch.version>0.1.55</jsch.version>
        <hutool.version>4.5.4</hutool.version>
        <jedis.version>2.9.0</jedis.version>
        <redisson.version>3.10.5</redisson.version>
        <jcifs.version>1.3.17</jcifs.version>
        <jsoup.version>1.11.3</jsoup.version>
        <jasypt.version>1.9.2</jasypt.version>
        <janino.version>3.0.12</janino.version>
        <bouncycastle.version>1.57</bouncycastle.version>
        <spring-boot.version>2.1.4.RELEASE</spring-boot.version>
        <spring-boot-admin.version>2.1.4</spring-boot-admin.version>
    </properties>

    <dependencyManagement>
        <dependencies>
            <dependency>
                <groupId>org.springframework.boot</groupId>
                <artifactId>spring-boot-dependencies</artifactId>
                <version>${spring-boot.version}</version>
                <type>pom</type>
                <scope>import</scope>
            </dependency>
        </dependencies>
    </dependencyManagement>

    <dependencies>
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-test</artifactId>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-aop</artifactId>
        </dependency>
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-web</artifactId>
        </dependency>
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-websocket</artifactId>
        </dependency>
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-amqp</artifactId>
        </dependency>
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-mail</artifactId>
        </dependency>
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-batch</artifactId>
        </dependency>
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-quartz</artifactId>
        </dependency>
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-data-jpa</artifactId>
        </dependency>
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-actuator</artifactId>
        </dependency>
        <!--
        spring-boot-devtools是一个为开发者服务的模块,其最重要的功能是发现应用代码更改后,它会自动重启应用
        其原理是使用两个ClassLoader,一个加载不会改变的类(第三方jar),另一个(RestartClassLoader)加载会更改的类
        这样在发现代码更改的时候,原RestartClassLoader会被丢弃,    并重建一个RestartClassLoader
        由于需要加载的类相对较少,所以实现了较快的重启时间(5秒以内)
        注意:它会自动重启应用,这和Eclipse的DEBUG模式下修改应用代码后刷新查看效果,是不同的
        -->
        <!--
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-devtools</artifactId>
        </dependency>
        -->
        <dependency>
            <groupId>mysql</groupId>
            <artifactId>mysql-connector-java</artifactId>
        </dependency>
        <dependency>
            <groupId>com.h2database</groupId>
            <artifactId>h2</artifactId>
        </dependency>

        <!-- Apache -->
        <dependency>
            <groupId>commons-io</groupId>
            <artifactId>commons-io</artifactId>
            <version>${commons-io.version}</version>
        </dependency>
        <dependency>
            <groupId>commons-net</groupId>
            <artifactId>commons-net</artifactId>
            <version>${commons-net.version}</version>
        </dependency>
        <dependency>
            <groupId>org.apache.commons</groupId>
            <artifactId>commons-text</artifactId>
            <version>${commons-text.version}</version>
        </dependency>
        <dependency>
            <groupId>org.apache.commons</groupId>
            <artifactId>commons-lang3</artifactId>
            <version>${commons-lang3.version}</version>
        </dependency>
        <dependency>
            <groupId>commons-codec</groupId>
            <artifactId>commons-codec</artifactId>
            <version>${commons-codec.version}</version>
        </dependency>
        <dependency>
            <groupId>commons-fileupload</groupId>
            <artifactId>commons-fileupload</artifactId>
            <version>${commons-fileupload.version}</version>
        </dependency>
        <dependency>
            <groupId>org.apache.poi</groupId>
            <artifactId>poi</artifactId>
            <version>${apache.poi.version}</version>
        </dependency>
        <dependency>
            <groupId>org.apache.poi</groupId>
            <artifactId>poi-ooxml</artifactId>
            <version>${apache.poi.version}</version>
        </dependency>
        <dependency>
            <groupId>org.apache.mina</groupId>
            <artifactId>mina-core</artifactId>
            <version>${apache.mina.version}</version>
        </dependency>
        <dependency>
            <groupId>org.apache.httpcomponents</groupId>
            <artifactId>httpclient</artifactId>
            <version>${apache.httpclient.version}</version>
        </dependency>
        <dependency>
            <groupId>org.apache.httpcomponents</groupId>
            <artifactId>httpclient-cache</artifactId>
            <version>${apache.httpclient.version}</version>
        </dependency>
        <dependency>
            <groupId>org.apache.httpcomponents</groupId>
            <artifactId>httpmime</artifactId>
            <version>${apache.httpclient.version}</version>
        </dependency>
        <dependency>
            <groupId>org.apache.httpcomponents</groupId>
            <artifactId>fluent-hc</artifactId>
            <version>${apache.httpclient.version}</version>
        </dependency>

        <!-- Google -->
        <dependency>
            <groupId>com.google.zxing</groupId>
            <artifactId>core</artifactId>
            <version>${google.zxing.version}</version>
        </dependency>
        <dependency>
            <groupId>com.google.zxing</groupId>
            <artifactId>javase</artifactId>
            <version>${google.zxing.version}</version>
        </dependency>

        <!-- Alibaba -->
        <dependency>
            <groupId>com.aliyun.oss</groupId>
            <artifactId>aliyun-sdk-oss</artifactId>
            <version>${alibaba.oss.version}</version>
        </dependency>
        <dependency>
            <groupId>com.alibaba</groupId>
            <artifactId>druid-spring-boot-starter</artifactId>
            <version>${alibaba.druid.version}</version>
        </dependency>
        <dependency>
            <groupId>com.alibaba</groupId>
            <artifactId>fastjson</artifactId>
            <version>${alibaba.fastjson.version}</version>
        </dependency>

        <!-- Other -->
        <!--
        <dependency>
            <groupId>io.shardingjdbc</groupId>
            <artifactId>sharding-jdbc-core-spring-boot-starter</artifactId>
            <version>${dangdang.shardingjdbc.version}</version>
        </dependency>
        -->
        <dependency>
            <groupId>com.ibeetl</groupId>
            <artifactId>beetl</artifactId>
            <version>${beetl.version}</version>
        </dependency>
        <dependency>
            <groupId>com.jcraft</groupId>
            <artifactId>jsch</artifactId>
            <version>${jsch.version}</version>
        </dependency>
        <dependency>
            <groupId>cn.hutool</groupId>
            <artifactId>hutool-core</artifactId>
            <version>${hutool.version}</version>
        </dependency>
        <dependency>
            <groupId>redis.clients</groupId>
            <artifactId>jedis</artifactId>
            <version>${jedis.version}</version>
        </dependency>
        <dependency>
            <groupId>org.redisson</groupId>
            <artifactId>redisson</artifactId>
            <version>${redisson.version}</version>
        </dependency>
        <dependency>
            <groupId>jcifs</groupId>
            <artifactId>jcifs</artifactId>
            <version>${jcifs.version}</version>
            <exclusions>
                <exclusion>
                    <groupId>javax.servlet</groupId>
                    <artifactId>servlet-api</artifactId>
                </exclusion>
            </exclusions>
        </dependency>
        <dependency>
            <groupId>org.jsoup</groupId>
            <artifactId>jsoup</artifactId>
            <version>${jsoup.version}</version>
        </dependency>
        <dependency>
            <groupId>org.jasypt</groupId>
            <artifactId>jasypt</artifactId>
            <version>${jasypt.version}</version>
        </dependency>
        <dependency>
            <groupId>org.codehaus.janino</groupId>
            <artifactId>janino</artifactId>
            <version>${janino.version}</version>
        </dependency>
        <dependency>
            <groupId>org.bouncycastle</groupId>
            <artifactId>bcprov-jdk15on</artifactId>
            <version>${bouncycastle.version}</version>
        </dependency>
    </dependencies>

    <!-- Maven在使用第三方构件和插件时是分开来配置的,所以如果我们希望插件也通过本地仓库来下载,则需配置pluginRepository -->
    <!--
    <repositories>
        <repository>
            <id>central</id>
            <url>http://192.168.2.41:8081/nexus/content/groups/public/</url>
            <releases>
                <enabled>true</enabled>
            </releases>
            <snapshots>
                <enabled>true</enabled>
            </snapshots>
        </repository>
    </repositories>
    <pluginRepositories>
        <pluginRepository>
            <id>central</id>
            <url>http://192.168.2.41:8081/nexus/content/groups/public/</url>
            <releases>
                <enabled>true</enabled>
            </releases>
            <snapshots>
                <enabled>false</enabled>
            </snapshots>
        </pluginRepository>
    </pluginRepositories>
     -->

    <build>
        <plugins>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-war-plugin</artifactId>
                <version>2.6</version>
                <configuration>
                    <failOnMissingWebXml>false</failOnMissingWebXml>
                </configuration>
            </plugin>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-compiler-plugin</artifactId>
                <version>3.5.1</version>
                <configuration>
                    <source>1.8</source>
                    <target>1.8</target>
                    <encoding>UTF-8</encoding>
                </configuration>
            </plugin>
        </plugins>
    </build>

    <!--
    <server>
        <id>jadyer-nexus-release</id>
        <username>admin</username>
        <password>admin123</password>
    </server>
    1.将工具包编译发布到私服的命令：[call mvn clean deploy -DskipTests]
    2.将jar包发布到本地仓库的命令是：mvn install:install-file -DgroupId=com.jadyer -DartifactId=Jadyer-tag -Dversion=1.0 -Dpackaging=jar -Dfile=D:/mytaglib/Jadyer-tag-1.0.jar
    3.将第三方jar发布到私服的命令是：mvn deploy:deploy-file -Dversion=11.2.0.4 -Dfile=ojdbc6-11.2.0.4.jar -Dsources=ojdbc6-11.2.0.4-sources.jar -DgroupId=com.jadyer.oracle -DartifactId=ojdbc6 -Dpackaging=jar -DrepositoryId=jadyer-nexus-release -Durl=http://192.168.2.41:8081/nexus/content/repositories/releases
    4.在私服手工发布第三方jar的操作：Repositories===Releases===Artifact Upload===GAV Definition===GAV Parameters===Select Artifact(s) to Upload===Upload Artifact(s)
     -->
    <!--
    <distributionManagement>
        <repository>
            <id>jadyer-nexus-release</id>
            <url>http://192.168.2.41:8081/nexus/content/repositories/releases</url>
        </repository>
    </distributionManagement>
     -->
</project>